{"version":3,"sources":["services/getMocks.js","ExampleLineas.js","EjemploBar.js","LineaZoom.js","BootTable.js","App.js","reportWebVitals.js","index.js"],"names":["getMocks","a","response","datos","results","ExampleLineas","props","useState","dataSet","useEffect","className","ResponsiveContainer","width","height","LineChart","data","margin","top","right","left","bottom","XAxis","tick","dataKey","YAxis","domain","Tooltip","contentStyle","backgroundColor","color","cursor","itemStyle","Brush","Line","type","stroke","activeDot","r","animationDuration","Legend","verticalAlign","align","chartHeight","Radial","BarChart","CartesianGrid","strokeDasharray","Bar","fill","LineaZoom","initialState","refAreaLeft","refAreaRight","animation","state","this","from","to","ref","offset","console","log","refData","slice","forEach","d","getAxisYDomain","setState","top2","bottom2","barIndex","style","userSelect","onClick","zoomOut","bind","onMouseDown","e","activeLabel","onMouseMove","onMouseUp","zoom","horizontal","vertical","allowDataOverflow","yAxisId","PureComponent","demoUrl","columns","CSVExport","ExportCSVButton","dataField","text","sort","filter","textFilter","placeholder","selectRow","mode","clickToSelect","cellEdit","cellEditFactory","rowEvents","row","rowIndex","BootTable","styleTable","theme","bootstrap4","keyField","classes","filterFactory","pagination","paginationFactory","showTotal","sizePerPage","mocks","name","cost","impression","App","loading","setLoading","localStorage","getItem","checked","setChecked","resp","setTimeout","anyNameFunction","document","getElementsByTagName","setAttribute","size","defaultChecked","onChange","setItem","class","EjemploBar","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ad24ad2a.chunk.js","sourcesContent":["import datos from './mock.json'\r\n\r\nconst getMocks = async () => {\r\n  /*\r\n  let url = 'https://swapi.dev/api/people/'\r\n  let response = await fetch(url)\r\n  response = await response.json()\r\n  */\r\n  let response = datos\r\n  return response.results\r\n}\r\n\r\nexport default getMocks\r\n","import React, { useState } from 'react'\nimport {\n  LineChart,\n  ZoomAndPan,\n  Line,\n  Legend,\n  XAxis,\n  Brush,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n} from 'recharts'\nimport { useEffect } from 'react'\nimport getMocks from '../src/services/getMocks'\n\nconst ExampleLineas = props => {\n  const [datos, dataSet] = useState([])\n\n  /*async function anyNameFunction() {\n    let resp = await getMocks()\n    dataSet(resp)\n    console.log(resp)\n  }\n  */\n\n  useEffect(() => {\n    dataSet(props.datos)\n  }, [props])\n\n  return (\n    <div className=\"mt-4\">\n      <h2 className=\"text-warning\"> en Lines...</h2>\n      <ResponsiveContainer width=\"100%\" height={300}>\n        <LineChart\n          width={500}\n          height={300}\n          data={datos}\n          margin={{\n            top: 20,\n            right: 10,\n            left: 10,\n            bottom: 5,\n          }}\n        >\n          <XAxis tick={{}} dataKey=\"name\" />\n          <YAxis tick={{}} domain={[0, 'dataMax + 100']} />\n\n          <Tooltip\n            contentStyle={{ backgroundColor: '#404040', color: '#fff' }}\n            cursor={false}\n            itemStyle={{ color: '#fff' }}\n          />\n\n          <Brush height={25}></Brush>\n\n          <Line type=\"monotone\" dataKey=\"height\" stroke=\"#8884d8\" activeDot={{ r: 8 }} animationDuration={300} />\n          <Line type=\"monotone\" dataKey=\"mass\" stroke=\"#82ca9d\" animationDuration={300} />\n          <Legend verticalAlign=\"bottom\" height={5} align=\"center\" chartHeight={25} />\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  )\n}\nexport default ExampleLineas\n","import React, { useState, useEffect } from 'react'\r\nimport { BarChart, CartesianGrid, YAxis, XAxis, Tooltip, Bar, Legend, ResponsiveContainer } from 'recharts'\r\n\r\nimport getMocks from './services/getMocks'\r\n\r\nconst Radial = props => {\r\n  const [datos, dataSet] = useState([])\r\n\r\n  async function anyNameFunction() {\r\n    dataSet(props.datos)\r\n  }\r\n\r\n  useEffect(() => {\r\n    dataSet(props.datos)\r\n  }, [props])\r\n\r\n  return (\r\n    <div className=\"mt-4\">\r\n      <h3> en Bars...</h3>\r\n      <ResponsiveContainer width=\"100%\" height={300}>\r\n        <BarChart width={500} height={250} data={datos}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip\r\n            contentStyle={{ backgroundColor: '#404040', color: '#fff' }}\r\n            cursor={false}\r\n            itemStyle={{ color: '#fff' }}\r\n          />\r\n          <Legend />\r\n          <Bar dataKey=\"mass\" fill=\"#8884d8\" animationDuration={200} />\r\n          <Bar dataKey=\"height\" fill=\"#82ca9d\" animationDuration={200} />\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Radial\r\n","import React, { PureComponent } from 'react'\nimport {\n  Label,\n  LineChart,\n  Line,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Legend,\n  Tooltip,\n  ReferenceArea,\n  ResponsiveContainer,\n} from 'recharts'\n\nconst getAxisYDomain = (from, to, ref, offset, data) => {\n  console.log(from, to, ref, offset)\n  console.log(data)\n  //TRAER POSICIONES DEL ARRAY PARA X\n  /*\n  from = data.findIndex(x => x.name === from)\n  to = data.findIndex(x => x.name === to)\n\n  console.log('FROM', from)\n  console.log('TO', to)\n  if (from > to) {\n    const aux = from\n    from = to\n    to = aux\n  }\n  const refData = data.slice(from, to + 1)\n*/\n  // ORIGINAL\n  const refData = data.slice(from - 1, to)\n  console.log(refData)\n  let [bottom, top] = [refData[0][ref], refData[0][ref]]\n  refData.forEach(d => {\n    if (d[ref] > top) top = d[ref]\n    if (d[ref] < bottom) bottom = d[ref]\n  })\n\n  return [(bottom | 0) - offset, (top | 0) + offset, refData]\n}\n\nexport default class LineaZoom extends PureComponent {\n  static demoUrl = 'https://codesandbox.io/s/highlight-zomm-line-chart-v77bt'\n\n  constructor(props) {\n    super(props)\n\n    const initialState = {\n      data: props.datos,\n      left: 'dataMin',\n      right: 'dataMax',\n      refAreaLeft: '',\n      refAreaRight: '',\n      top: 'dataMax+1',\n      bottom: 'dataMin-1',\n      animation: true,\n    }\n    this.state = initialState\n  }\n\n  componentWillReceiveProps(props) {\n    const initialState = {\n      data: props.datos,\n      left: 'dataMin',\n      right: 'dataMax',\n      refAreaLeft: '',\n      refAreaRight: '',\n      top: 'dataMax+1',\n      bottom: 'dataMin-1',\n\n      animation: true,\n    }\n    this.state = initialState\n  }\n  zoom() {\n    let { refAreaLeft, refAreaRight } = this.state\n    const { data } = this.state\n\n    if (refAreaLeft === refAreaRight || refAreaRight === '') {\n      this.setState(() => ({\n        refAreaLeft: '',\n        refAreaRight: '',\n      }))\n      return\n    }\n\n    // xAxis domain\n    if (refAreaLeft > refAreaRight) [refAreaLeft, refAreaRight] = [refAreaRight, refAreaLeft]\n\n    // yAxis domain\n    const [bottom, top] = getAxisYDomain(refAreaLeft, refAreaRight, '', 1, data)\n\n    this.setState(() => ({\n      refAreaLeft: '',\n      refAreaRight: '',\n      data: data.slice(),\n      left: refAreaLeft,\n      right: refAreaRight,\n      bottom,\n      top,\n    }))\n  }\n\n  zoomOut() {\n    const { data } = this.state\n    this.setState(() => ({\n      data: data.slice(),\n      refAreaLeft: '',\n      refAreaRight: '',\n      left: 'dataMin',\n      right: 'dataMax',\n      top: 'dataMax+1',\n      bottom: 'dataMin',\n      top2: 'dataMax+50',\n      bottom2: 'dataMin+50',\n    }))\n  }\n\n  render() {\n    const { data, barIndex, left, right, refAreaLeft, refAreaRight, top, bottom, top2, bottom2 } = this.state\n\n    return (\n      <div className=\"highlight-bar-charts pt-auto mt-5\" style={{ userSelect: 'none', width: '100%' }}>\n        <h2 className=\"text-success\">Stocks vs Cost</h2>\n        <div className=\"d-flex justify-content-center mb-3\">\n          <button type=\"button\" className=\"btn btn-outline-success btn-lg\" onClick={this.zoomOut.bind(this)}>\n            Zoom Out\n          </button>\n        </div>\n\n        <ResponsiveContainer width=\"100%\" height={400}>\n          <LineChart\n            width={200}\n            height={200}\n            data={data}\n            onMouseDown={e => this.setState({ refAreaLeft: e.activeLabel })}\n            onMouseMove={e => this.state.refAreaLeft && this.setState({ refAreaRight: e.activeLabel })}\n            // eslint-disable-next-line react/jsx-no-bind\n            onMouseUp={this.zoom.bind(this)}\n          >\n            <CartesianGrid horizontal=\"true\" vertical=\"\" strokeDasharray=\"1 1\" />\n            <XAxis tick={{}} allowDataOverflow dataKey=\"name\" domain={[left, right]} type=\"number\" />\n            <YAxis tick={{}} domain={[bottom, top]} type=\"number\" yAxisId=\"1\" />\n            <Tooltip\n              contentStyle={{ backgroundColor: '#404040', color: '#fff' }}\n              cursor={false}\n              itemStyle={{ color: '#fff' }}\n            />\n            <Line yAxisId=\"1\" type=\"monotone\" dataKey=\"cost\" stroke=\"#8884d8\" animationDuration={100} />\n            <Legend verticalAlign=\"bottom\" height={25} align=\"center\" />)\n          </LineChart>\n        </ResponsiveContainer>\n      </div>\n    )\n  }\n}\n","import BootstrapTable from 'react-bootstrap-table-next'\r\n\r\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter'\r\nimport { ToolkitProvide, CSVExport, ColumnToggle } from 'react-bootstrap-table2-toolkit'\r\nimport 'react-bootstrap-table2-toolkit/dist/react-bootstrap-table2-toolkit.min.css'\r\nimport paginationFactory from 'react-bootstrap-table2-paginator'\r\nimport cellEditFactory from 'react-bootstrap-table2-editor'\r\n\r\nconst { ExportCSVButton } = CSVExport\r\n\r\nconst columns = [\r\n  {\r\n    dataField: 'name',\r\n    text: ' Name',\r\n    sort: true,\r\n    filter: textFilter({ placeholder: 'Filtra aqui!' }),\r\n  },\r\n  {\r\n    dataField: 'height',\r\n    text: 'Altura',\r\n    sort: true,\r\n  },\r\n]\r\nconst selectRow = {\r\n  mode: 'radio',\r\n\r\n  clickToSelect: true,\r\n}\r\nconst cellEdit = cellEditFactory({\r\n  mode: 'click',\r\n})\r\n\r\nconst rowEvents = {\r\n  onClick: (e, row, rowIndex) => {\r\n    console.log(row, rowIndex)\r\n  },\r\n}\r\n\r\nconst BootTable = props => {\r\n  let styleTable = props.theme ? 'table table-striped table-hover table-dark' : 'table table-striped table-hover'\r\n\r\n  return (\r\n    <div>\r\n      <BootstrapTable\r\n        bootstrap4\r\n        cellEdit={cellEdit}\r\n        keyField=\"name\"\r\n        data={props.datos}\r\n        classes={styleTable}\r\n        columns={columns}\r\n        filter={filterFactory({})}\r\n        selectRow={selectRow}\r\n        rowEvents={rowEvents}\r\n        pagination={paginationFactory({ showTotal: true, sizePerPage: 10 })}\r\n      />\r\n    </div>\r\n  )\r\n}\r\nexport default BootTable\r\n","import React, { useState, useEffect } from 'react'\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts'\nimport ExampleLineas from './ExampleLineas'\nimport NavBar from './NavBar'\nimport EjemploBar from './EjemploBar'\nimport getMocks from '../src/services/getMocks'\nimport LineaZoom from './LineaZoom'\nimport schema from './schema.json'\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css'\nimport BootTable from './BootTable'\nimport Table from './Table'\nimport './App.css'\n\nimport BeatLoader from 'react-spinners/BeatLoader'\n\nconst mocks = [\n  { name: 1, cost: 2500.11, impression: 100 },\n  { name: 2, cost: 2.39, impression: 120 },\n  { name: 3, cost: 1.37, impression: 150 },\n  { name: 4, cost: 1.16, impression: 180 },\n  { name: 5, cost: 300.29, impression: 200 },\n  { name: 6, cost: 3, impression: 499 },\n  { name: 7, cost: 5500.53, impression: 50 },\n  { name: 8, cost: 2.52, impression: 100 },\n  { name: 9, cost: 1.79, impression: 200 },\n  { name: 10, cost: 2.94, impression: 222 },\n  { name: 11, cost: 6000.3, impression: 210 },\n  { name: 12, cost: 8500.41, impression: 300 },\n  { name: 13, cost: 2.1, impression: 50 },\n  { name: 14, cost: 8, impression: 190 },\n  { name: 15, cost: 0, impression: 300 },\n  { name: 16, cost: 24500, impression: 400 },\n  { name: 17, cost: 25553, impression: 200 },\n  { name: 18, cost: 26666, impression: 50 },\n  { name: 19, cost: 26666, impression: 100 },\n  { name: 20, cost: 29000, impression: 100 },\n]\nconst App = () => {\n  const [datos, dataSet] = useState([])\n  let [loading, setLoading] = useState(false)\n  let [color, setColor] = useState('#16E0E0')\n  const [checked, setChecked] = useState(localStorage.getItem('theme') === 'dark' ? true : false)\n\n  const toggleThemeChange = () => {\n    if (checked === false) {\n      localStorage.setItem('theme', 'dark')\n      setChecked(true)\n    } else {\n      localStorage.setItem('theme', 'light')\n      setChecked(false)\n    }\n  }\n\n  async function anyNameFunction() {\n    let resp = await getMocks()\n    dataSet(resp)\n    console.log(resp)\n  }\n\n  useEffect(() => {\n    dataSet(datos)\n    anyNameFunction()\n    console.log('TRAJE API')\n    document.getElementsByTagName('HTML')[0].setAttribute('data-theme', localStorage.getItem('theme'))\n  }, [checked])\n\n  async function handleSubmit(e) {\n    dataSet([])\n    setLoading(!loading)\n    let resp = await getMocks()\n    dataSet(resp)\n    setTimeout(() => {\n      console.log(resp)\n\n      if (datos) setLoading(false)\n    }, 1000)\n  }\n\n  return (\n    <div className=\"container-fluid p-3 mb-2 App\">\n      <div className=\"sweet-loading d-flex justify-content-center \">\n        <BeatLoader color={color} loading={loading} size={60} />\n      </div>\n\n      <div className=\"d-flex justify-content-end\">\n        <h4 className=\"px-2\"> Cambia el tema!</h4>\n        <label className=\"switch\">\n          <input type=\"checkbox\" defaultChecked={checked} onChange={() => toggleThemeChange()} />\n          <span className=\"slider round\" />\n        </label>\n      </div>\n\n      <div className=\"d-flex justify-content-center\">\n        <button type=\"button\" class=\"btn btn-outline-success btn-lg\" onClick={handleSubmit}>\n          Traer Info\n        </button>\n      </div>\n\n      <div className=\"row mt-4\">\n        <div className=\"col-sm-6 col-md-6 shadow-sm p-3 mb-5  rounded \">\n          <ExampleLineas datos={datos}></ExampleLineas>\n        </div>\n        <div className=\"col-sm-6 col-md-6 shadow-sm p-3 mb-5  rounded \">\n          <EjemploBar datos={datos}></EjemploBar>\n        </div>\n        {/* Segunda seccion */}\n        <div className=\"row\">\n          <div className=\"col-sm-6 col-md-6 col-lg shadow-md p-3 mb-5  rounded \">\n            <ExampleLineas datos={datos}></ExampleLineas>\n            <LineaZoom datos={mocks}></LineaZoom>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col\">\n            {/*  <Table headers={Object.keys(schema)} rows={datos} theme={checked} /> */}\n\n            <BootTable datos={datos} theme={checked}></BootTable>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}